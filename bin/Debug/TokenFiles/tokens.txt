(classPart, valuePart, lineNo)
------------------------------------------

(general, , 1) 	 > KW
(class, , 1) 	 > KW
(ID, MyClass, 1)
({, , 2) 	 > Punct
(general, , 3) 	 > KW
(inactive, , 3) 	 > KW
(void, , 3) 	 > KW
(main, , 3) 	 > KW
((, , 3) 	 > Punct
(), , 3) 	 > Punct
({, , 4) 	 > Punct
(num, , 5) 	 > KW
(ID, myNumber, 5)
(=, , 5) 	 > Oper
(int_const, 10, 5)
(#, , 5) 	 > Punct
(decimal, , 6) 	 > KW
(ID, myDecimalNumber, 6)
(=, , 6) 	 > Oper
(dec_const, 10.5, 6)
(#, , 6) 	 > Punct
(char, , 7) 	 > KW
(ID, MyCharacter, 7)
(=, , 7) 	 > Oper
(char_const, 'a', 7)
(#, , 7) 	 > Punct
(bool, , 8) 	 > KW
(ID, myBool, 8)
(=, , 8) 	 > Oper
(bool_const, true, 8)
(#, , 8) 	 > Punct
(bool, , 9) 	 > KW
(ID, myBool, 9)
(=, , 9) 	 > Oper
(bool_const, false, 9)
(#, , 9) 	 > Punct
(bool, , 10) 	 > KW
(ID, myBool, 10)
(=, , 10) 	 > Oper
(!, , 10) 	 > Oper
(bool_const, true, 10)
(#, , 10) 	 > Punct
(final, , 12) 	 > KW
(num, , 12) 	 > KW
(ID, myNumber, 12)
(=, , 12) 	 > Oper
(int_const, 10, 12)
(#, , 12) 	 > Punct
(general, , 13) 	 > KW
(num, , 13) 	 > KW
(ID, myNumber, 13)
(=, , 13) 	 > Oper
(int_const, 10, 13)
(#, , 13) 	 > Punct
(ID, MyClass, 15)
(ID, myObj, 15)
(=, , 15) 	 > Oper
(fresh, , 15) 	 > KW
(ID, MyClass, 15)
(#, , 15) 	 > Punct
(series, , 17) 	 > KW
(ID, mySeries, 17)
(=, , 17) 	 > Oper
([, , 17) 	 > Punct
(int_const, 1, 17)
(,, , 17) 	 > Punct
(int_const, 2, 17)
(,, , 17) 	 > Punct
(int_const, 3, 17)
(], , 17) 	 > Punct
(#, , 17) 	 > Punct
(table, , 18) 	 > KW
(ID, my1dArray, 18)
(=, , 18) 	 > Oper
([, , 18) 	 > Punct
(int_const, 1, 18)
(,, , 18) 	 > Punct
(int_const, 2, 18)
(,, , 18) 	 > Punct
(int_const, 3, 18)
(], , 18) 	 > Punct
(#, , 18) 	 > Punct
(tableD, , 19) 	 > KW
(ID, my2dArray, 19)
(=, , 19) 	 > Oper
([, , 19) 	 > Punct
([, , 19) 	 > Punct
(int_const, 1, 19)
(,, , 19) 	 > Punct
(int_const, 2, 19)
(,, , 19) 	 > Punct
(int_const, 3, 19)
(], , 19) 	 > Punct
(,, , 19) 	 > Punct
([, , 19) 	 > Punct
(int_const, 4, 19)
(,, , 19) 	 > Punct
(int_const, 5, 19)
(,, , 19) 	 > Punct
(int_const, 6, 19)
(], , 19) 	 > Punct
(], , 19) 	 > Punct
(#, , 19) 	 > Punct
(when, , 21) 	 > KW
((, , 21) 	 > Punct
(bool_const, true, 21)
(), , 21) 	 > Punct
({, , 22) 	 > Punct
(ID, myNum, 23)
(++, , 23) 	 > Oper
(#, , 23) 	 > Punct
(ID, myNum, 24)
(--, , 24) 	 > Oper
(#, , 24) 	 > Punct
(jump, , 25) 	 > KW
(#, , 25) 	 > Punct
(}, , 26) 	 > Punct
(lest, , 27) 	 > KW
({, , 28) 	 > Punct
(ID, myNumber, 29)
(=, , 29) 	 > Oper
(ID, f, 29)
(is, , 29) 	 > Oper
(ID, rtNum, 29)
(-, , 29) 	 > Oper
(ID, secondNum, 29)
(#, , 29) 	 > Punct
(skip, , 30) 	 > KW
(#, , 30) 	 > Punct
(}, , 31) 	 > Punct
(until, , 33) 	 > KW
((, , 33) 	 > Punct
(ID, number, 33)
(is, , 33) 	 > Oper
(int_const, 10, 33)
(), , 33) 	 > Punct
({, , 34) 	 > Punct
(ID, myfunction, 35)
((, , 35) 	 > Punct
(), , 35) 	 > Punct
(#, , 35) 	 > Punct
(}, , 36) 	 > Punct
(when, , 38) 	 > KW
((, , 38) 	 > Punct
(ID, myNum, 38)
(is, , 38) 	 > Oper
(int_const, 10, 38)
(or, , 38) 	 > Oper
(ID, myNum, 38)
(is, , 38) 	 > Oper
(int_const, 20, 38)
(), , 38) 	 > Punct
({, , 39) 	 > Punct
(ID, myfunction, 40)
((, , 40) 	 > Punct
(), , 40) 	 > Punct
(#, , 40) 	 > Punct
(ID, print, 41)
((, , 41) 	 > Punct
(ID, f, 41)
(is, , 41) 	 > Oper
(ID, rtVar, 41)
(,, , 41) 	 > Punct
(ID, secondVar, 41)
(), , 41) 	 > Punct
(#, , 41) 	 > Punct
(}, , 42) 	 > Punct
(loop, , 44) 	 > KW
((, , 44) 	 > Punct
(int_const, 1, 44)
(,, , 44) 	 > Punct
(int_const, 10, 44)
(), , 44) 	 > Punct
({, , 45) 	 > Punct
(ID, print, 46)
((, , 46) 	 > Punct
(str_const, "ALWI", 46)
(), , 46) 	 > Punct
(#, , 46) 	 > Punct
(}, , 47) 	 > Punct
(try, , 49) 	 > KW
({, , 50) 	 > Punct
(}, , 52) 	 > Punct
(except, , 53) 	 > KW
({, , 54) 	 > Punct
(}, , 56) 	 > Punct
(finally, , 57) 	 > KW
({, , 58) 	 > Punct
(}, , 60) 	 > Punct
(}, , 61) 	 > Punct
(}, , 63) 	 > Punct
(general, , 66) 	 > KW
(class, , 66) 	 > KW
(ID, ParentClass, 66)
({, , 67) 	 > Punct
(}, , 69) 	 > Punct
(general, , 71) 	 > KW
(class, , 71) 	 > KW
(ID, SubClass, 71)
(inherits, , 71) 	 > KW
(ID, ParentClass, 71)
({, , 72) 	 > Punct
(}, , 74) 	 > Punct
(symbolic, , 76) 	 > KW
(class, , 76) 	 > KW
(ID, TestClass, 76)
({, , 77) 	 > Punct
(general, , 78) 	 > KW
(symbolic, , 78) 	 > KW
(void, , 78) 	 > KW
(ID, myMethod, 78)
((, , 78) 	 > Punct
(), , 78) 	 > Punct
(#, , 78) 	 > Punct
(}, , 79) 	 > Punct
(general, , 83) 	 > KW
(class, , 83) 	 > KW
(ID, ParentClass, 83)
({, , 84) 	 > Punct
(general, , 85) 	 > KW
(void, , 85) 	 > KW
(ID, myMethod, 85)
((, , 85) 	 > Punct
(num, , 85) 	 > KW
(ID, myNum, 85)
(), , 85) 	 > Punct
({, , 86) 	 > Punct
(THIS, , 87) 	 > KW
(., , 87) 	 > Punct
(ID, number, 87)
(=, , 87) 	 > Oper
(ID, myNum, 87)
(#, , 87) 	 > Punct
(}, , 88) 	 > Punct
(}, , 89) 	 > Punct
(interface, , 92) 	 > KW
(ID, myInterface, 92)
({, , 93) 	 > Punct
(general, , 94) 	 > KW
(void, , 94) 	 > KW
(ID, myMethod, 94)
((, , 94) 	 > Punct
(), , 94) 	 > Punct
(#, , 94) 	 > Punct
(}, , 95) 	 > Punct
(class, , 98) 	 > KW
(ID, SubClass, 98)
(implements, , 98) 	 > KW
(ID, myInterface, 98)
({, , 99) 	 > Punct
(general, , 100) 	 > KW
(void, , 100) 	 > KW
(ID, myMethod, 100)
((, , 100) 	 > Punct
(), , 100) 	 > Punct
({, , 101) 	 > Punct
(}, , 103) 	 > Punct
(}, , 104) 	 > Punct
