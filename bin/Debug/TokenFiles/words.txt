general class MyClass
{
	general inactive void main ()
	{
		
		num myNumber = 10#

		@num myNumber = 123#

		decimal weight = 45.5#

		final num anyNumber = 10#
		general decimal anyDec = 10.3#
		
		series mySeries = [1, 2, 3]# 			@it is not fixed data structure
		table my1dArray = [1, 2, 3]# 			@fixed data structure
		tableD my2dArray = [[1, 2, 3], [4,5,6]]# 	@fixed data structure

		@series mySeries = [11, 22, 33]#

		MyClass myObj = fresh MyClass# 			@object creation with fresh keywords
		myObj.myFunction()#
	}
}

general class ParentClass
{
	general void myMethod(num myNum)
	{
		THIS.number = myNum#
	}
}


general class SubClass inherits ParentClass
{
	@this is child class inheriting parent class
	
	num myNumber = 10# 			@value should be any integer
	decimal myDecimalNumber = 10.5# 	@value should be any decimal number
	char MyCharacter = 'a'# 		@any ascii character
}


final class ABC
{
	general void myMethod()
	{
		num age = 10#
	}

	general num myMethod()
	{
		num age = 10#
		refund age#
	}

	@ to cehck function redeclaration error
	@@general void myMethod()
	{
		num myNumber = 10#
	}@@
}


symbolic class abstractClass
{
	general symbolic void myMethod()#
}


interface myInterface
{
	general void myMethod()#
}

general class XYZ inherits abstractClass
{
	general void myMethod(num myNum)
	{
		THIS.number = myNum#
	}
}

general class ABCXYZ inherits myInterface
{
	general void myMethod(num myNum)
	{
		THIS.number = myNum#
	}
}



@to check class redeclaration
@@general class ABC
{
	general void myMethod(num myNum)
	{
		THIS.number = myNum#
	}
}@@


@@symbolic class abstractClass
{
	general symbolic void myMethod()#
}@@


@@interface myInterface
{
	general void myMethod()#
}@@


@to check final class 'ABC' inheritance
@@general class XYZ inherits ABC
{
	general void myMethod(num myNum)
	{
		THIS.number = myNum#
	}
}@@

















